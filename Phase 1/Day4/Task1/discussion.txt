"Read patients' temperatures (integer) from keyboard till we read 0
    by using array / collection."
Find average temperature (integer), 
prime temperatures sum(example: 41, prime number temperature), 
minimum 3 digit temperatures sum, 
minimum temperature, 
odd temperatures sum (example: 31), and
2nd maximum odd temperature.  
Check minimum temperature is also prime temperature.
Use coding standards and best practices to write pseudo code and c++ code.
Plan the task codes to make as reusable functions.

-------------------------------------------------------------------------------


function readTemperature(temperature->[int] , size->int&)
function findTemperatureSum(temperature->[int] , size ->int)->int
function findTemperatureAverage(TemperatureSum , size ->int)->int
function isPrimeTemperature(number->int)->bool
function findPrimeTemperatureSum(temperature->[int] , size ->int)->int
function isNumberMinimum3Digit(number->int)->bool
function findMin3DigitSum(temperature->[int], size -> int) -> int 
function findMinTemperature(temperature->[int] , size ->int)->int
function isOddTemperature(number -> int) -> bool
function findSumOfOddTemperature(temperature->[int] , size ->int)->int
function find2ndMaxOddTemperature(temperature->[int] , size ->int)->int
function Test()
    //temperature [int]
    size=0
    readTemperature(temperature, size)
    TemperatureSum= findTemperatureSum(temperature->[int] , size ->int)->int
    averageTemperature = findTemperatureAverage(TemperatureSum, size)
    primeTemperatureSum = findPrimeTemperatureSum(temperature, size)

    qualify[int]
    int count= isNumberMinimum3Digit(temperatures, size, qualify);
    min3DigitTemperatureSum = findMin3DigitSum(qualify, count)


    minimumTemperature = findMinTemperature(temperature, size)
    oddTemperatureSum = findSumOfOddTemperature(temperature , size)
    secondMaxOddTemperature = find2ndMaxOddTemperature(temperature, size)
    print averageTemperature
    print primeTemperatureSum
    print min3DigitTemperatureSum
    print minimumTemperature
    print oddTemperatureSum
    print secondMaxOddTemperature
    if isprime(minimumTemperature)
         print "The minimum temperature is an prime number"
    else
         print "The minimum temperature is not a prime number"  

pseudoMain 
    Test()


//--------------pseudocode------------------------

function readTemperature(temperatures->[int],size->int&)
       
       input i=0
       int currentTemperature
       while(true)
           print "enter the patient's temperature"
           read currentTemperature
           if(currentTemperature!=0)
                ++size
                temperatures[i]=currentTemperature
                ++i
            else
               break
            end if
        end while
end function                

function findTemperatureSum(temperature->[int] , size ->int)->int
       int sum = 0
       for i in temperatures
             sum + = temperatures[i]
       end for
       return sum
end function

function findTemperatureAverage(TemperatureSum->int , size ->int)->int
        return (TemperatureSum/size);
end function

function isOddTemperature(number -> int) -> bool

    if (number % 2 != 0)
        return true
    else
        return false
    end if
    
end function

function findSumOfOddTemperature(temperature->[int] , size ->int)->int

    int oddSum = 0;
    
    for i from 0 ..size-1
    
        if (isOddTemperature(number))
            oddSum = (oddSum + number)
        end if
        
    end for
    
    return oddSum
    
end function


function isNumberMinimum3Digit( temperature -> [int] , size -> int , qualify -> [int]) -> bool
    count = 0
    for i in temperatures
        if ( temperatures[i] >= 100 )
            qualify[count] = temperatures[i]
            count++
    return count
            

function findMin3DigitSum( qualify -> [int], count -> int ) ->int
    for i in qualify
        sum += qualify[i]
    return sum






function find2ndMaxOddTemperature(temperatures[]-->int, size-->int)-->int

  maxOdd = INT_MIN
    secondMaxOdd = INT_MIN
    
     for i from 0...size
     
         if(isOddTemperature(number))
          
            if (temperatures[i]> maxOdd) 
            
                secondMaxOdd = maxOdd
                maxOdd = temperatures[i]
                
            end if
            else if (temperatures[i] > secondMaxOdd && arr[i] != maxOdd) 
            
                secondMaxOdd = temperatures[i]
                
            end elseif
        end if
    end for
    
    if (secondMaxOdd == INT_MIN)
     
          print " No second maximum odd temperature found " 
          return -1
     end if
     
     return secondMaxOdd

function findMinTemperature(temperature->[int],size->int)->int
    minTemp = MAX_INT
    for i in teperature[]
        if temperature[i] < minTemp
        minTemp = temperature[i]
return minTemp

// pseudo code
function isPrimeTemperture(currentTemperature -> [int]) - bool

    if (currentTemperature <= 1)
        return false
    end if
    for (i = 2; i <= (currentTemperature / 2); i = i + 1)
        if (currentTemperature % i == 0)
            return false
        end if
    end for
    return true

// pseudo code
function findTemperatureSum(temperatures -> [int], size -> [int]) -> [int]

    initialize sum = 0
    for (int i =0; i<size; i++)
        currentTemperature = temperatures[i]

        if (isPrimeTemperture(currentTemperature -> [int]) == true)
            sum += currentTemperature
        end if
    end for

    return sum
