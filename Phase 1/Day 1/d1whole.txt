
//-----------------pseudocode--------------------------------

------------------------------question 5--------------------------------
// pseudo code
function isDivisibleBy3(number)
    return (number % 3 == 0)
end function

function isDivisibleBy3Test()
    input number

    result = isDivisibleBy3(number)

    if result
        print "The number", number, "is divisible by 3."
    else
        print "The number", number, "is not divisible by 3."
    end if
end function

start
   isDivisibleBy3Test()
end


//------------------program---------

// c++ code
#include<iostream>
#include<cstdlib>
using std::cout;
using std::cin;
using std::endl;

bool isDivisibleBy3(int number) 
{
    return (number % 3 == 0);
}

void isDivisibleBy3Test(void) 
{
    int number;
    cout << "Enter the number : ";
    cin >> number;

    bool result = isDivisibleBy3(number);

    if (result) 
    {
        cout << "The number " << number << " is divisible by 3." << endl;
    } 
    else 
    {
        cout << "The number " << number << " is not divisible by 3." << endl;
    }
}

int main() 
{
    isDivisibleBy3Test();

    return EXIT_SUCCESS;
}


-----------------------------------------------------------Question 6-----------------------------------------------

//Check a number is divisible by 27 or not

Pseudo functions:

function isDivisibleByTwentySeven(number->int)->bool

    if (number MOD 27 == 0)
        return true
    endif

    return false
	
function isDivisibleByTwentySevenTest()
    input number

    result=isDivisibleByTwentySeven(number)
	
    if result
        print"The number is divisible by 27"
    else
        print"The number is not divisible by 27"

Pseudocode:

isDivisibleByTwentySevenTest()

CODE:

#include<iostream>
using std::cout;
using std::cin;

bool isDivisibleByTwentySeven(int number)
{
    if(number % 27 == 0)
    {
        return true;
    }
    
    return false;
}

void isDivisibleByTwentySevenTest(void)
{
    int number;
	
    cout<< "Enter a Number:";
    cin>> number;
	
    int result=isDivisibleByTwentySeven(number);
    
    if(result)
    {
        cout<< "The number is divisible by 27";
    }
    else
    {
        cout<< "The number is not divisible by 27";
    }
}

int main(void)
{
    isDivisibleByTwentySevenTest();
	
    return 0;
}

-----------------------------------------------------------Question 11--------------------------------------------------

//check a number is perfect or not

Pseudofunctions:

function isPerfectNumber(number->int)->bool
  sum = 0
    
  half = (number / 2)
 	
  for i from 1 ..half
 	if (number % i == 0)
 	    sum = (sum + i)
      endif
  endfor
 	
  return (sum == number)
 	
function isPerfectNumberTest()
 
    input number
 	  bool result = isPerfectNumber(number)
 	
 	  if (result)
 	      print "The number is perfect"
 	  else
 	      print "The number is not perfect"
 	  endif
 	
Pseudocode:

    isPerfectNumberTest()


#include<iostream>
using std::cout;
using std::cin;


bool isPerfectNumber(int number)
{
    int sum = 0;
    
    int half = (number / 2);
 	
 	for (int i = 1 ; i <= half ; i++)
 	{
 	    if (number % i == 0)
 	    {
 	       sum = (sum + i);
 	    }
 	}
 	
 	return (sum == number);
}

void isPerfectNumberTest(void)
{
    int number;
    
    cout << "Enter a number:";
    cin >> number;
    
 	bool result = isPerfectNumber(number);
 	
 	if (result)
 	{
 	    cout << number << " is a perfect number";
 	}
 	else
 	{
 	    cout << number << " is not a perfect number";
 	}
}

int main(void)
{
    isPerfectNumberTest();
 
    return 0;
}
 

--------------------------------------------------------Question 12--------------------------------------------

//check odd or even

Pseudo functions:

function isEven(number->int)->bool
    return (number % 2 == 0) 
	
function isEvenTest()

    input number

    if (isEven(number))
	print "The number is even"
    else
	print "The number is odd"
    endif
	
pseudocode:

isEvenTest()

CODE:

#include<iostream>
using std::cin;
using std::cout;

bool isEven(int number)
{
    return ((number % 2) == 0);
}

void isEvenTest(void)
{
    int number;
    
    cout << "Enter a number:";
    cin >> number;
    
    if (isEven(number))
    {
	cout << number << " is even";
    }
    else
    {
	cout << number << " is odd";
    }
}

int main(void)
{
    isEvenTest();
    
    return 0;
}
    

-------------------------------question17------------------------------


function fibonacciNumbers(n -> [int], arrStore -> [int]) -> null
    if (n >= 1)
        arrStore[0] = 0
    end if
    
    if (n >= 2)
        arrStore[1] = 1
    end if
    
    first = 0
    second = 1
    next
    
    for (i = 3; i <= n; i++)
        next = first + second
        arrStore[i-1] = next
        first = second
        second = next
    end for
end fibonacciNumbers

function fibonacciNumbersTest(void)
    input n
    
    if (n < 1)
        print "Please enter a positive integer." 
        return
    end if
    
    if (n > MAX_SIZE)
        print "Please enter a number less than or equal to " << MAX_SIZE << "." 
        return
    end if
    
    int arrStore[MAX_SIZE] = {}
    
    fibonacciNumbers(n, arrStore)
    
    for (i = 0; i < n; i++)
        print arrStore[i] 
    end for
end fibonacciNumbersTest

start 
main()
    fibonacciNumbersTest()

    return EXIT_SUCCESS
end 



//---------------------program------------------------------


// c++ code for fibonacci series
#include <iostream>
#include<cstdlib>
#define MAX_SIZE 100
using std::cout;
using std::cin;
using std::endl;

void fibonacciNumbers(int n, int arrStore[]) 
{
    if (n >= 1) {
        arrStore[0] = 0;
    }
    if (n >= 2) {
        arrStore[1] = 1;
    }

    int first = 0, second = 1, next;

    for (int i = 3; i <= n; i++) {
        next = first + second;
        arrStore[i-1] = next;
        first = second;
        second = next;
    }
}

void fibonacciNumbersTest(void) 
{
    int n;
    cout << "Enter the number of terms : ";
    cin >> n;

    if (n < 1) {
        cout << "Please enter a positive integer." << endl;
        return;
    }
    if (n > MAX_SIZE) {
        cout << "Please enter a number less than or equal to " << MAX_SIZE << "." << endl;
        return;
    }
    
    int arrStore[MAX_SIZE] = {};

    fibonacciNumbers(n, arrStore);

    for (int i = 0; i < n; i++) 
    {
        cout << arrStore[i] << endl;
    }
    
}

int main(void) {
    fibonacciNumbersTest();

    return EXIT_SUCCESS;
}

-----------------------------------Question 18---------------------------------------------------

// Print prime numbers in the limit

Pseudo Functions:

Function isPrime(number->int)->bool

    if number < 2

        Return False

    for i from 2 ..sqrt(number)

        if number % i == 0

            Return False

    Return True

Function printPrimeNumber(lowerLimit->int, upperLimit->int)

    for number from lowerLimit ..upperLimit

        if isPrime(number)

            Print number

Function printPrimeNumberTest()

    input lowerLimit
    input upperLimit

    printPrimeNumber(lowerLimit, upperLimit)

Pseudocode:

int main()

    printPrimeNumberTest()

CODE:

#include <cmath>
#include <iostream>
using namespace std;

bool isPrime(int number) 
{
    if (number < 2) 
    {
        return false;  
    }
    
    for (int i = 2; i <= sqrt(number); i++) 
    {
        if (number % i == 0) 
        {
            return false;  
        }
    }
    
    return true;  
}

void printPrimeNumber(int lowerLimit, int upperLimit) 
{
    for (int number = lowerLimit; number <= upperLimit; number++) 
    {
        if (isPrime(number)) 
        {
            cout << number << " ";  
        }
    }
}

void printPrimeNumberTest(void) 
{
    int lowerLimit, upperLimit;
    
    cout << "Enter the lower limit: ";
    cin >> lowerLimit;
    cout << "Enter the upper limit: ";
    cin >> upperLimit;
    
    cout << "Prime numbers between " << lowerLimit << " and " << upperLimit << ": ";

    printPrimeNumber(lowerLimit, upperLimit);
}

int main(void)
{
    printPrimeNumberTest();
    
    return 0;
}


-----------------------------------Question 21---------------------------------------------------

to sort the elements in a array

pseudofunction

function sortelement( arr -> [int], size -> int) -> [int]
	int element
	for i from 0 to size-1
		enter the input
		arr[i] = element
	for i from 0 to size-1
		for j from i+1 to size-1
			if arr[i] > arr[j]
				temp = arr[i]
				arr[i] = arr[j]
				arr[j] = temp
	return arr

function sortelementtest()
	int arr
	size = 5
	sortelement()

	sorted array
	for i from 0 to size-1
		arr[i]
	

pseudocode

sortelementtest();



C++ code		


#include <iostream>
using namespace std;

int* sortelement( int arr[], int size)
{
	int element;
	for ( int i = 0; i < size; i++ )
	{
		cout << "enter the elements " << i + 1 << " : ";
		cin >> element;
		arr[i] = element;
	}
	for ( int i = 0; i < size; i++ )
	{
	    	for ( int j = i + 1; j < size; j++ )
	    	{
	    	    if (  arr[i] > arr[j])
	    	    {
	    	        int temp = arr[i];
	    	        arr[i] = arr[j];
	    	        arr[j] = temp;
	    	    }
	    	}

	}
	return arr;
}

void sortelementtest()
{
	int size = 5;
	int arr[ size ];
	sortelement(arr, size);
	
	cout << "Sorted array";
    for ( int i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    }
	
}




int main(void)
{
    sortelementtest();
    
    return 0;
}




int main(void)
{
    sortelementtest();
    
    return 0;
}



--------------------------------------- Question 27-----------------------------------


//To count the number of vowels present in a string

pseudofunctions:

function countVowels(str --> string) --> int

    vowels = 0
    
    for i from 0...str[i]  
    
        if (str[i] =='a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u' 
        || str[i] == 'A' || str[i] == 'E' || str[i] == 'I' || str[i] == 'O' || str[i] == 'U')

             vowels++
        end if
        
    return vowels
    end for

end function

function countVowelsTest()
    
    input str

    vowels = countVowels(str)
       print "Total number of Vowels is : " 

pseudocode:
    
function main()

    countVowelsTest()
    return 0



C++ CODE:

#include <iostream>
#include <stdio.h>
using std::cout;
using std::cin;
using std::string;


int countVowels(string str)
{
    int vowels = 0;
    
    
    for (int i = 0; i<str[i]; i++)  
    {
        if (str[i] =='a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u' 
        || str[i] == 'A' || str[i] == 'E' || str[i] == 'I' || str[i] == 'O' || str[i] == 'U')

        {
		    vowels++;
        }
     }  
    return vowels;
}

void countVowelsTest(void)
{
    
    string str;

    cout << "Enter the string : ";
    cin >> str;

    int vowels = countVowels(str);
    cout << "Total number of Vowels : " << vowels;
    
}

int main(void)
{

     countVowelsTest();
     return 0;
}

