
------------------------------Question 17--------------------------------
//venketesh should combine all the files into this

//-----------------pseudocode--------------------------------

                      ----------------------venkatesh--------------------------
// pseudo code for fibonacci series 
function fibonacciNumbers(n -> [int], arrStore -> [int]) -> null
    if (n >= 1)
        arrStore[0] = 0
    end if
    
    if (n >= 2)
        arrStore[1] = 1
    end if
    
    first = 0
    second = 1
    next
    
    for (i = 3; i <= n; i++)
        next = first + second
        arrStore[i-1] = next
        first = second
        second = next
    end for
end fibonacciNumbers

function fibonacciNumbersTest(void)
    input n
    
    if (n < 1)
        print "Please enter a positive integer." 
        return
    end if
    
    if (n > MAX_SIZE)
        print "Please enter a number less than or equal to " << MAX_SIZE << "." 
        return
    end if
    
    int arrStore[MAX_SIZE] = {}
    
    fibonacciNumbers(n, arrStore)
    
    for (i = 0; i < n; i++)
        print arrStore[i] 
    end for
end fibonacciNumbersTest

start 
main()
    fibonacciNumbersTest()

    return EXIT_SUCCESS
end 



//---------------------program------------------------------

              ---------------------------venkatesh----------------

// c++ code for fibonacci series
#include <iostream>
#include<cstdlib>
#define MAX_SIZE 100
using std::cout;
using std::cin;
using std::endl;

void fibonacciNumbers(int n, int arrStore[]) 
{
    if (n >= 1) {
        arrStore[0] = 0;
    }
    if (n >= 2) {
        arrStore[1] = 1;
    }

    int first = 0, second = 1, next;

    for (int i = 3; i <= n; i++) {
        next = first + second;
        arrStore[i-1] = next;
        first = second;
        second = next;
    }
}

void fibonacciNumbersTest(void) 
{
    int n;
    cout << "Enter the number of terms : ";
    cin >> n;

    if (n < 1) {
        cout << "Please enter a positive integer." << endl;
        return;
    }
    if (n > MAX_SIZE) {
        cout << "Please enter a number less than or equal to " << MAX_SIZE << "." << endl;
        return;
    }
    
    int arrStore[MAX_SIZE] = {};

    fibonacciNumbers(n, arrStore);

    for (int i = 0; i < n; i++) 
    {
        cout << arrStore[i] << endl;
    }
    
}

int main(void) {
    fibonacciNumbersTest();

    return EXIT_SUCCESS;
}

-----------------------------------Question 18---------------------------------------------------

// Print prime numbers in the limit

Pseudo Functions:

Function isPrime(number->int)->bool

    if number < 2

        Return False

    for i from 2 ..sqrt(number)

        if number % i == 0

            Return False

    Return True

Function printPrimeNumber(lowerLimit->int, upperLimit->int)

    for number from lowerLimit ..upperLimit

        if isPrime(number)

            Print number

Function printPrimeNumberTest()

    input lowerLimit
    input upperLimit

    printPrimeNumber(lowerLimit, upperLimit)

Pseudocode:

int main()

    printPrimeNumberTest()

CODE:

#include <cmath>
#include <iostream>
using namespace std;

bool isPrime(int number) 
{
    if (number < 2) 
    {
        return false;  
    }
    
    for (int i = 2; i <= sqrt(number); i++) 
    {
        if (number % i == 0) 
        {
            return false;  
        }
    }
    
    return true;  
}

void printPrimeNumber(int lowerLimit, int upperLimit) 
{
    for (int number = lowerLimit; number <= upperLimit; number++) 
    {
        if (isPrime(number)) 
        {
            cout << number << " ";  
        }
    }
}

void printPrimeNumberTest(void) 
{
    int lowerLimit, upperLimit;
    
    cout << "Enter the lower limit: ";
    cin >> lowerLimit;
    cout << "Enter the upper limit: ";
    cin >> upperLimit;
    
    cout << "Prime numbers between " << lowerLimit << " and " << upperLimit << ": ";

    printPrimeNumber(lowerLimit, upperLimit);
}

int main(void)
{
    printPrimeNumberTest();
    
    return 0;
}



